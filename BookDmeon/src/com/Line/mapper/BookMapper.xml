<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Line.mapper.BookMapper">
<!-- 自定义返回结果集 -->
   <resultMap id="bookMap" type="com.Line.entity.Book">
   	<!-- property="实体类的属性名" column="数据库的列名" javaType="参数的类型"-->
        <id property="BookId" column="Book_Id" javaType="java.lang.Integer"></id>
        <result property="BookName" column="Book_Name" javaType="java.lang.String"></result>
        <result property="BookPrice" column="Book_Price" javaType="java.lang.Double"></result>
        <result property="BookImg" column="Book_Imgs" javaType="java.lang.String"></result>
    </resultMap>
<!-- 在各种标签中的id属性必须和接口中的方法名相同 ， id属性值必须是唯一的，不能够重复使用。parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型-->    
<!-- useGeneratedKeys：（ 仅 对 insert 有 用 ） 这 会 告 诉 MyBatis 使 用 JDBC 的getGeneratedKeys 
            方法来取出由数据（比如：像 MySQL 和 SQLServer 这样的数据库管理系统的自动递增字段）内部生成的主键。默认值： false。 -->    
<!--keyProperty： （仅对 insert有用）标记一个属性， MyBatis 会通过 getGeneratedKeys或者通过 insert 语句的 selectKey 子元素设置它的值。默认：不设置。 -->
<!--#{}中的内容，为占位符，当参数为某个JavaBean时，表示放置该Bean对象的属性值  -->


    
    <select id="selectBookByName" parameterType="java.lang.String" resultMap="bookMap">
     select * from book where Book_name like '%${value}%' ORDER BY Book_Id
    </select>
    
    <select id="selectAllBook" resultMap="bookMap">
     select * from book
    </select>
    <insert id="insertBook" useGeneratedKeys="true" keyProperty="BookId">
    	insert into book(Book_Name,Book_Price,Book_Imgs) values(#{BookName},#{BookPrice},#{BookImg})
    </insert>
    
</mapper>